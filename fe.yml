apiVersion: apps/v1

kind: Deployment

metadata:
    name: frontend-deployment
    labels:
        app: frontend-deployment

spec:
    replicas: 1
    selector:
        matchLabels:
            app: frontend-pod

    template:
        metadata:
            name: frontend-pod
            labels:
                app: frontend-pod

        spec:
            containers:
                - name: frontend-container
                  image: vrddocker/fe:latest
#                   image: 887016865623.dkr.ecr.us-west-2.amazonaws.com/uber-fe:prod
                  imagePullPolicy: Always
                  ports:
                      - containerPort: 80
---
apiVersion: v1

kind: Service

metadata:
    name: frontend-service
    labels:
        app: frontend-service

spec:
    type: LoadBalancer
    ports:
        - protocol: TCP
          port: 80
          targetPort: 80
    selector:
        app: frontend-pod

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: sa-frontend
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: sa-frontend
#   minReadySeconds: 15
#   strategy:
#     type: RollingUpdate
#     rollingUpdate:
#       maxUnavailable: 1
#       maxSurge: 1
#   template:
#     metadata:
#       labels:
#         app: sa-frontend
#     spec:
#       containers:
#         - image: vrddocker/fe:latest
#           imagePullPolicy: Always
#           name: sa-frontend
#           ports:
#             - containerPort: 80
# --- 
# apiVersion: v1
# kind: Service
# metadata:
#   name: sa-frontend-lb
# spec:
#   type: LoadBalancer
#   ports:
#   - port: 80
#     protocol: TCP
#     targetPort: 80
#   selector:
#     app: sa-frontend
